#!/usr/bin/env bash
set -e
TF_SERVING_VERSION=1.14

cat > /opt/app/bin/.env << DOCKER_COMPOSE_ENV_EOF
TF_SERVING_VERSION=${TF_SERVING_VERSION}
MODEL_NAME={{getv "/env/model_name" "saved_model_half_plus_two_mkl"}}
OMP_NUM_THREADS={{getv "/host/cpu" "8"}}
TENSORFLOW_INTER_OP_PARALLELISM=1
TENSORFLOW_INTRA_OP_PARALLELISM={{getv "/host/cpu" "8"}}
S3_ACCESS_KEY={{getv "/env/s3_access_key" "AKIAIOSXODNN7EXAMPLE"}}
S3_SECRET_KEY={{getv "/env/s3_secret_key" "wJalrXUtqFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"}}
MODEL_BASE_PATH={{getv "/env/model_base_path" "s3://models"}}
{{if eq (getv "/env/s3_type") "minio"}}
  {{range $dir := lsdir "/hosts/model_repo/"}}{{$ip := printf "/hosts/model_repo/%s/ip" $dir}}
S3_ENDPOINT={{getv $ip}}:9000
S3_USE_HTTPS=0
S3_VERIFY_SSL=0
S3_REGION=us-east-1
  {{ end }}
{{- else if eq (getv "/env/s3_type") "QingStor" }}
S3_ENDPOINT=s3.{{getv "/env/s3_region" "pek3b"}}.qingstor.com
S3_REGION={{getv "/env/s3_region" "pek3b"}}
{{- end }}
TF_CPP_MIN_LOG_LEVEL=3
DOCKER_COMPOSE_ENV_EOF

cat > /opt/app/bin/docker-compose.yaml << DOCKER_COMPOSE_EOF
{{if eq (getv "/env/s3_type") "none"}}
version: "3"
services:

   tensorflow_serving:
     container_name: tensorflow_serving
     image: qingcloud/tensorflow-serving:\${TF_SERVING_VERSION}-mkl
     network_mode: host
     volumes:
       - /data/models/\${MODEL_NAME}:/models/\${MODEL_NAME} 
     logging:
       driver: syslog
       options:
         syslog-address: "tcp://localhost:514"
         tag: "tfserving"
     restart: always
     environment:
       MODEL_NAME: \${MODEL_NAME}
       OMP_NUM_THREADS: \${OMP_NUM_THREADS}
       TENSORFLOW_INTER_OP_PARALLELISM: \${TENSORFLOW_INTER_OP_PARALLELISM}
       TENSORFLOW_INTRA_OP_PARALLELISM: \${TENSORFLOW_INTRA_OP_PARALLELISM}

   envoy:
     container_name: envoy
     image: envoyproxy/envoy-alpine:v1.11.0
     network_mode: host
     volumes:
       - /opt/envoy:/etc/envoy 
     logging:
       driver: syslog
       options:
         syslog-address: "tcp://localhost:514"
         tag: "envoy"
     restart: always
{{- else if eq (getv "/env/s3_type") "minio" }}
version: "3"
services:

   tensorflow_serving:
     container_name: tensorflow_serving
     image: qingcloud/tensorflow-serving:\${TF_SERVING_VERSION}-mkl
     network_mode: host
     volumes:
       - /data/models/\${MODEL_NAME}:/models/\${MODEL_NAME} 
     logging:
       driver: syslog
       options:
         syslog-address: "tcp://localhost:514"
         tag: "tfserving"
     restart: always
     environment:
       MODEL_NAME: \${MODEL_NAME}
       MODEL_BASE_PATH: \${MODEL_BASE_PATH}
       AWS_ACCESS_KEY_ID: \${S3_ACCESS_KEY}
       AWS_SECRET_ACCESS_KEY: \${S3_SECRET_KEY}
       AWS_REGION: \${S3_REGION} 
       S3_ENDPOINT: \${S3_ENDPOINT}
       S3_USE_HTTPS: \${S3_USE_HTTPS}
       S3_VERIFY_SSL: \${S3_VERIFY_SSL}
       TF_CPP_MIN_LOG_LEVEL: \${TF_CPP_MIN_LOG_LEVEL}
       OMP_NUM_THREADS: \${OMP_NUM_THREADS}
       TENSORFLOW_INTER_OP_PARALLELISM: \${TENSORFLOW_INTER_OP_PARALLELISM}
       TENSORFLOW_INTRA_OP_PARALLELISM: \${TENSORFLOW_INTRA_OP_PARALLELISM}

   envoy:
     container_name: envoy
     image: envoyproxy/envoy-alpine:v1.11.0
     network_mode: host
     volumes:
       - /opt/envoy:/etc/envoy 
     logging:
       driver: syslog
       options:
         syslog-address: "tcp://localhost:514"
         tag: "envoy"
     restart: always
{{- else if eq (getv "/env/s3_type") "QingStor" }}
version: "3"
services:

   tensorflow_serving:
     container_name: tensorflow_serving
     image: qingcloud/tensorflow-serving:\${TF_SERVING_VERSION}-mkl
     network_mode: host
     volumes:
       - /data/models/\${MODEL_NAME}:/models/\${MODEL_NAME} 
     logging:
       driver: syslog
       options:
         syslog-address: "tcp://localhost:514"
         tag: "tfserving"
     restart: always
     environment:
       MODEL_NAME: \${MODEL_NAME}
       MODEL_BASE_PATH: \${MODEL_BASE_PATH}
       AWS_ACCESS_KEY_ID: \${S3_ACCESS_KEY}
       AWS_SECRET_ACCESS_KEY: \${S3_SECRET_KEY}
       AWS_REGION: \${S3_REGION} 
       S3_ENDPOINT: \${S3_ENDPOINT} 
       TF_CPP_MIN_LOG_LEVEL: \${TF_CPP_MIN_LOG_LEVEL}
       OMP_NUM_THREADS: \${OMP_NUM_THREADS}
       TENSORFLOW_INTER_OP_PARALLELISM: \${TENSORFLOW_INTER_OP_PARALLELISM}
       TENSORFLOW_INTRA_OP_PARALLELISM: \${TENSORFLOW_INTRA_OP_PARALLELISM}

   envoy:
     container_name: envoy
     image: envoyproxy/envoy-alpine:v1.11.0
     network_mode: host
     volumes:
       - /opt/envoy:/etc/envoy 
     logging:
       driver: syslog
       options:
         syslog-address: "tcp://localhost:514"
         tag: "envoy"
     restart: always
{{- end }}
DOCKER_COMPOSE_EOF

appctl restart
---
- name: set var
  set_fact:
    systemd_path: roles/{{ parentRole }}/files/lib/systemd/system/

- name: copy SystemD files
  copy:
    src: "{{ systemd_path }}"
    dest: /lib/systemd/system
    owner: root
    group: root
    mode: u=rw,go=r
  when: systemd_path is directory

- name: disable auto start
  systemd:
    name: "{{ parentRole }}"
    state: stopped
    masked: yes
  when: systemd_path is directory

- name: copy logging config files
  copy:
    src: roles/{{ parentRole }}/files/{{ path }}/
    dest: /{{ path }}
    owner: root
    group: root
    mode: u=rw,go=r
  notify:
    - restart rsyslog
  loop:
    - etc/logrotate.d
    - etc/rsyslog.d
  loop_control:
    loop_var: path
  when: ('roles/' + parentRole + '/files/' + path + '/') is directory

- name: copy rsyslog config files
  copy:
    src: roles/{{ parentRole }}/files/{{ path }}
    dest: /{{ path }}
    owner: root
    group: root
    mode: u=rw,go=r
  notify:
    - restart rsyslog
  loop:
    - etc/rsyslog.conf
  loop_control:
    loop_var: path
  when: ('roles/' + parentRole + '/files/' + path) is file

- name: copy app files
  copy:
    src: "{{ path }}"
    dest: /opt/
    owner: root
    group: svc
    mode: preserve
    directory_mode: u=rwx,g=rx,o=
  when: path is directory
  loop:
    - "roles/{{ parentRole }}/files/opt/"
  loop_control:
    loop_var: path

- name: copy s3cmd config file
  copy:
    src: "{{ path }}"
    dest: /root/
    owner: root
    group: svc
    mode: preserve
    directory_mode: u=rwx,g=rx,o=
  when: path is directory
  loop:
    - "roles/{{ parentRole }}/files/root/"
  loop_control:
    loop_var: path

- name: create symbolic link for ctl.sh - {{ parentRole }}
  vars:
    src_file: /opt/app/bin/ctl.sh
  file:
    src: "{{ src_file }}"
    dest: /usr/bin/appctl
    state: link

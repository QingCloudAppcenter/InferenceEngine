#!/usr/bin/env bash
set -e

cat > /opt/envoy/envoy.yaml << ENVOY_CONFIG_EOF
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: {{getv "/env/model.http.port" "8080"}}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          access_log: # configure logging
            name: envoy.file_access_log
            config:
              path: /dev/stdout          
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: tfserving
          http_filters:
          - name: envoy.router
            typed_config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: {{getv "/env/model.grpc.port" "8081"}}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          access_log: # configure logging
            name: envoy.file_access_log
            config:
              path: /dev/stdout
          route_config:
            name: grpc_local_route
            virtual_hosts:
            - name: grpc_backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                  grpc: {}
                route:
                  cluster: grpc_tfserving
          http_filters:
          - name: envoy.router
            config: {}
  clusters:
  - name: tfserving
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: tfserving
      endpoints:
      - lb_endpoints:
{{range $dir := lsdir "/hosts/tfserving/"}}{{$ip := printf "/hosts/tfserving/%s/ip" $dir}}
        - endpoint:
            address:
              socket_address:
                address: {{getv $ip}}
                port_value: 8501
{{end}}
  - name: grpc_tfserving
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {} # enable H2 protocol
    load_assignment:
      cluster_name: grpc_tfserving
      endpoints:
      - lb_endpoints:
{{range $dir := lsdir "/hosts/tfserving/"}}{{$ip := printf "/hosts/tfserving/%s/ip" $dir}}
        - endpoint:
            address:
              socket_address:
                address: {{getv $ip}}
                port_value: 8500
{{end}}
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
ENVOY_CONFIG_EOF

appctl restart_envoy
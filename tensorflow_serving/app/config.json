{
  "type": "array",
  "properties": [{
    "key": "cluster",
    "description": "InferenceEngine cluster properties",
    "type": "array",
    "properties": [{
      "key": "name",
      "label": "Name",
      "description": "The name of the InferenceEngine service",
      "type": "string",
      "default": "Inference Engine",
      "required": "no"
    }, {
      "key": "description",
      "label": "Description",
      "description": "The description of the InferenceEngine service",
      "type": "string",
      "default": "",
      "required": "no"
    }, {
      "key": "vxnet",
      "label": "VxNet",
      "description": "Choose a vxnet to join",
      "type": "string",
      "default": "",
      "required": "yes"
    }, {
      "key": "tfserving",
      "label": "tfserving",
      "description": "Tensorflow Serving Node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          8,
          12,
          16,
          32
        ],
        "default": 8,
        "required": "yes"
      }, {
        "description": "Memory of each node",
        "key": "memory",
        "label": "Memory",
        "type": "integer",
        "range": [
          16384,
          24576,
          32768,
          49152,
          65536,
          131072
        ],
        "default": 16384,
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of tfserving nodes to create",
        "type": "integer",
        "min": 1,
        "max": 200,
        "default": 1,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "range": [
          202
        ],
        "changeable_when_create": false,
        "default": 202,
        "required": "yes"
      }]
    }, {
      "key": "model_repo",
      "label": "model_repo",
      "description": "Client Node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          1,
          2,
          4,
          8
        ],
        "default": 2,
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "range": [
          2048,
          4096,
          8192,
          16384
        ],
        "default": 4096,
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of model repo Nodes to create",
        "type": "integer",
        "range": [
          0,
          1
        ],
        "default": 0,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "range": [
          101
        ],
        "changeable_when_create": false,
        "default": 101,
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each node, such as high performance, high performance plus",
        "type": "integer",
        "range": [
          100
        ],
        "changeable_when_create": false,
        "default": 100,
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for model repo node, used to store models in Minio",
        "type": "integer",
        "min": 10,
        "step": 10,
        "default": 10,
        "required": "yes"
      }]
    }]
  }, {
    "key": "env",
    "description": "application configuration properties",
    "type": "array",
    "properties": [{
      "key": "model_name",
      "label": "model.name",
      "description": "Model name",
      "type": "string",
      "default": "saved_model_half_plus_two_mkl",
      "changeable": true,
      "required": "yes"
    }, {
      "key": "model_base_path",
      "label": "model.base.path",
      "description": "Model base path",
      "type": "string",
      "default": "s3://models",
      "changeable": true,
      "dependencies":[
        {"refkey":"s3_type","values":["minio","QingStor"],"operator":"in"}
      ],
      "required": "yes"
    }, {
      "key": "http_port",
      "label": "http.port",
      "description": "Http port to serve the model",
      "type": "string",
      "default": "8080",
      "changeable": true,
      "required": "yes"
    }, {
      "key": "grpc_port",
      "label": "grpc.port",
      "description": "GRPC port to serve the model",
      "type": "string",
      "default": "8081",
      "changeable": true,
      "required": "yes"
    }, {
      "key": "s3_type",
      "label": "s3.type",
      "description": "Type of s3 compatible object store",
      "type": "string",
      "default": "none",
      "range": ["none","minio","QingStor"],
      "required": "yes"
    }, {
      "key": "access_key",
      "label": "access.key",
      "description": "Access key used to access QingStor object store",
      "type": "accesskey",
      "dependencies":[
        {"refkey":"s3_type","values":["QingStor"],"operator":"in"}
      ],
      "required": "yes"
    }, {
      "key": "s3_access_key",
      "label": "s3.access.key",
      "description": "Access key used to access MinIO object store",
      "type": "password",
      "default": "AKIAIOSXODNN7EXAMPLE",
      "pattern": "^.{20}$",
      "changeable": true,
      "dependencies":[
        {"refkey":"s3_type","values":["minio"],"operator":"in"}
      ],
      "required": "yes"
    }, {
      "key": "s3_secret_key",
      "label": "s3.secret.key",
      "description": "Secret key used to access MinIO object store",
      "type": "password",
      "default": "wJalrXUtqFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
      "pattern": "^.{40}$",
      "changeable": true,
      "dependencies":[
        {"refkey":"s3_type","values":["minio"],"operator":"in"}
      ],
      "required": "yes"
    }, {
      "key": "s3_region",
      "label": "s3.region",
      "description": "Region used to access QingStor object store",
      "type": "string",
      "default": "pek3b",
      "range": ["pek3a","sh1a","pek3b","gd2"],
      "dependencies":[
        {"refkey":"s3_type","values":["QingStor"],"operator":"in"}
      ],
      "required": "yes"
    }, {
      "key": "enable_access_log",
      "label": "enable.access.log",
      "description": "Enable inference HTTP/GRPC API access log",
      "type": "boolean",
      "default": false,
      "range": [true,false],
      "required": "false"
    }]
  }]
}
